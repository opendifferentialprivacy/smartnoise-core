name: Rust

on: #[push, pull_request]
  push:
    branches: [348-action]
#     #pull_request:
#  #  branches: [ develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    # Just add this  =>
    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x

    # And you get this  =>
    - name: Print slug/short variables
      run: |
        echo "Slug variables"
        echo " - ${{ env.GITHUB_REF_SLUG }}"
        echo " - ${{ env.GITHUB_HEAD_REF_SLUG }}"
        echo " - ${{ env.GITHUB_BASE_REF_SLUG }}"
        echo " - ${{ env.GITHUB_REPOSITORY_SLUG }}"
        // output e.g. : master feat-new-feature v1.0.0 product-1.0.0-rc.2 new-awesome-product
        echo "Slug URL variables"
        echo " - ${{ env.GITHUB_REF_SLUG_URL }}"
        echo " - ${{ env.GITHUB_HEAD_REF_SLUG_URL }}"
        echo " - ${{ env.GITHUB_BASE_REF_SLUG_URL }}"
        echo " - ${{ env.GITHUB_REPOSITORY_SLUG_URL }}"
        // output e.g. : master feat-new-feature v1-0-0 product-1-0-0-rc-2 new-awesome-product
        echo "Short SHA variables"
        echo " - ${{ env.GITHUB_SHA_SHORT }}"
        // output e.g. : ffac537e
    - name: Set the branch name
      shell: bash
      id: extract_branch
      run: echo "##[set-output name=branch;]${GITHUB_REF#refs/heads/}"
    - name: Build docs
      if: ${{ steps.extract_branch.outputs.branch }} == '348-action'
      run: |
        bash scripts/build_docs.sh;
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: docs # The folder the action should deploy.
    - name: Build
      if: ${{ steps.extract_branch.outputs.branch }} == 'x348-action'
      run: |
        cd ffi-rust;
        cargo build --verbose --workspace;
    - name: Run tests
      if: ${{ steps.extract_branch.outputs.branch }} == 'x348-action'
      run: |
        cd ffi-rust;
        cargo test --verbose --workspace;
